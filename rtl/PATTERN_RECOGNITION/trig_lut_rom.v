// ============================================================
// Auto-generated Q1.15 sine/cosine ROM for FPGA
// ============================================================
module trig_lut_rom #(
    parameter THETA_STEPS = 180
) (
    input  logic [$clog2(THETA_STEPS)-1:0] theta_idx,
    output logic signed [15:0] cos_q,
    output logic signed [15:0] sin_q
);

    // Cosine table (Q1.15)
    localparam logic signed [15:0] cos_lut [0:THETA_STEPS-1] = '{
        16'sh7FFF,
        16'sh7FFA,
        16'sh7FEB,
        16'sh7FD2,
        16'sh7FAF,
        16'sh7F82,
        16'sh7F4B,
        16'sh7F0B,
        16'sh7EC0,
        16'sh7E6C,
        16'sh7E0D,
        16'sh7DA5,
        16'sh7D33,
        16'sh7CB7,
        16'sh7C32,
        16'sh7BA2,
        16'sh7B0A,
        16'sh7A67,
        16'sh79BB,
        16'sh7906,
        16'sh7847,
        16'sh777F,
        16'sh76AD,
        16'sh75D2,
        16'sh74EE,
        16'sh7401,
        16'sh730B,
        16'sh720C,
        16'sh7104,
        16'sh6FF3,
        16'sh6ED9,
        16'sh6DB7,
        16'sh6C8C,
        16'sh6B59,
        16'sh6A1D,
        16'sh68D9,
        16'sh678D,
        16'sh6639,
        16'sh64DD,
        16'sh6379,
        16'sh620D,
        16'sh609A,
        16'sh5F1F,
        16'sh5D9C,
        16'sh5C13,
        16'sh5A82,
        16'sh58EA,
        16'sh574B,
        16'sh55A5,
        16'sh53F9,
        16'sh5246,
        16'sh508D,
        16'sh4ECD,
        16'sh4D08,
        16'sh4B3C,
        16'sh496A,
        16'sh4793,
        16'sh45B6,
        16'sh43D4,
        16'sh41EC,
        16'sh4000,
        16'sh3E0E,
        16'sh3C17,
        16'sh3A1C,
        16'sh381C,
        16'sh3618,
        16'sh3410,
        16'sh3203,
        16'sh2FF3,
        16'sh2DDF,
        16'sh2BC7,
        16'sh29AC,
        16'sh278E,
        16'sh256C,
        16'sh2348,
        16'sh2121,
        16'sh1EF7,
        16'sh1CCB,
        16'sh1A9D,
        16'sh186C,
        16'sh163A,
        16'sh1406,
        16'sh11D0,
        16'sh0F99,
        16'sh0D61,
        16'sh0B28,
        16'sh08EE,
        16'sh06B3,
        16'sh0478,
        16'sh023C,
        16'sh0000,
        16'shFDC4,
        16'shFB88,
        16'shF94D,
        16'shF712,
        16'shF4D8,
        16'shF29F,
        16'shF067,
        16'shEE30,
        16'shEBFA,
        16'shE9C6,
        16'shE794,
        16'shE563,
        16'shE335,
        16'shE109,
        16'shDEDF,
        16'shDCB8,
        16'shDA94,
        16'shD872,
        16'shD654,
        16'shD439,
        16'shD221,
        16'shD00D,
        16'shCDFD,
        16'shCBF0,
        16'shC9E8,
        16'shC7E4,
        16'shC5E4,
        16'shC3E9,
        16'shC1F2,
        16'shC001,
        16'shBE14,
        16'shBC2C,
        16'shBA4A,
        16'shB86D,
        16'shB696,
        16'shB4C4,
        16'shB2F8,
        16'shB133,
        16'shAF73,
        16'shADBA,
        16'shAC07,
        16'shAA5B,
        16'shA8B5,
        16'shA716,
        16'shA57E,
        16'shA3ED,
        16'shA264,
        16'shA0E1,
        16'sh9F66,
        16'sh9DF3,
        16'sh9C87,
        16'sh9B23,
        16'sh99C7,
        16'sh9873,
        16'sh9727,
        16'sh95E3,
        16'sh94A7,
        16'sh9374,
        16'sh9249,
        16'sh9127,
        16'sh900D,
        16'sh8EFC,
        16'sh8DF4,
        16'sh8CF5,
        16'sh8BFF,
        16'sh8B12,
        16'sh8A2E,
        16'sh8953,
        16'sh8881,
        16'sh87B9,
        16'sh86FA,
        16'sh8645,
        16'sh8599,
        16'sh84F6,
        16'sh845E,
        16'sh83CE,
        16'sh8349,
        16'sh82CD,
        16'sh825B,
        16'sh81F3,
        16'sh8194,
        16'sh8140,
        16'sh80F5,
        16'sh80B5,
        16'sh807E,
        16'sh8051,
        16'sh802E,
        16'sh8015,
        16'sh8006
    };

    // Sine table (Q1.15)
    localparam logic signed [15:0] sin_lut [0:THETA_STEPS-1] = '{
        16'sh0000,
        16'sh023C,
        16'sh0478,
        16'sh06B3,
        16'sh08EE,
        16'sh0B28,
        16'sh0D61,
        16'sh0F99,
        16'sh11D0,
        16'sh1406,
        16'sh163A,
        16'sh186C,
        16'sh1A9D,
        16'sh1CCB,
        16'sh1EF7,
        16'sh2121,
        16'sh2348,
        16'sh256C,
        16'sh278E,
        16'sh29AC,
        16'sh2BC7,
        16'sh2DDF,
        16'sh2FF3,
        16'sh3203,
        16'sh3410,
        16'sh3618,
        16'sh381C,
        16'sh3A1C,
        16'sh3C17,
        16'sh3E0E,
        16'sh3FFF,
        16'sh41EC,
        16'sh43D4,
        16'sh45B6,
        16'sh4793,
        16'sh496A,
        16'sh4B3C,
        16'sh4D08,
        16'sh4ECD,
        16'sh508D,
        16'sh5246,
        16'sh53F9,
        16'sh55A5,
        16'sh574B,
        16'sh58EA,
        16'sh5A82,
        16'sh5C13,
        16'sh5D9C,
        16'sh5F1F,
        16'sh609A,
        16'sh620D,
        16'sh6379,
        16'sh64DD,
        16'sh6639,
        16'sh678D,
        16'sh68D9,
        16'sh6A1D,
        16'sh6B59,
        16'sh6C8C,
        16'sh6DB7,
        16'sh6ED9,
        16'sh6FF3,
        16'sh7104,
        16'sh720C,
        16'sh730B,
        16'sh7401,
        16'sh74EE,
        16'sh75D2,
        16'sh76AD,
        16'sh777F,
        16'sh7847,
        16'sh7906,
        16'sh79BB,
        16'sh7A67,
        16'sh7B0A,
        16'sh7BA2,
        16'sh7C32,
        16'sh7CB7,
        16'sh7D33,
        16'sh7DA5,
        16'sh7E0D,
        16'sh7E6C,
        16'sh7EC0,
        16'sh7F0B,
        16'sh7F4B,
        16'sh7F82,
        16'sh7FAF,
        16'sh7FD2,
        16'sh7FEB,
        16'sh7FFA,
        16'sh7FFF,
        16'sh7FFA,
        16'sh7FEB,
        16'sh7FD2,
        16'sh7FAF,
        16'sh7F82,
        16'sh7F4B,
        16'sh7F0B,
        16'sh7EC0,
        16'sh7E6C,
        16'sh7E0D,
        16'sh7DA5,
        16'sh7D33,
        16'sh7CB7,
        16'sh7C32,
        16'sh7BA2,
        16'sh7B0A,
        16'sh7A67,
        16'sh79BB,
        16'sh7906,
        16'sh7847,
        16'sh777F,
        16'sh76AD,
        16'sh75D2,
        16'sh74EE,
        16'sh7401,
        16'sh730B,
        16'sh720C,
        16'sh7104,
        16'sh6FF3,
        16'sh6ED9,
        16'sh6DB7,
        16'sh6C8C,
        16'sh6B59,
        16'sh6A1D,
        16'sh68D9,
        16'sh678D,
        16'sh6639,
        16'sh64DD,
        16'sh6379,
        16'sh620D,
        16'sh609A,
        16'sh5F1F,
        16'sh5D9C,
        16'sh5C13,
        16'sh5A82,
        16'sh58EA,
        16'sh574B,
        16'sh55A5,
        16'sh53F9,
        16'sh5246,
        16'sh508D,
        16'sh4ECD,
        16'sh4D08,
        16'sh4B3C,
        16'sh496A,
        16'sh4793,
        16'sh45B6,
        16'sh43D4,
        16'sh41EC,
        16'sh3FFF,
        16'sh3E0E,
        16'sh3C17,
        16'sh3A1C,
        16'sh381C,
        16'sh3618,
        16'sh3410,
        16'sh3203,
        16'sh2FF3,
        16'sh2DDF,
        16'sh2BC7,
        16'sh29AC,
        16'sh278E,
        16'sh256C,
        16'sh2348,
        16'sh2121,
        16'sh1EF7,
        16'sh1CCB,
        16'sh1A9D,
        16'sh186C,
        16'sh163A,
        16'sh1406,
        16'sh11D0,
        16'sh0F99,
        16'sh0D61,
        16'sh0B28,
        16'sh08EE,
        16'sh06B3,
        16'sh0478,
        16'sh023C
    };

    always_ff @(posedge clk) begin
        cos_q <= cos_lut[theta_idx];
        sin_q <= sin_lut[theta_idx];
    end

endmodule
// ============================================================
